pipeline { 
  agent any
    stages{ 
      stage('build maven') { 
        steps{
          sh 'mvn clean install -Dmaven.test.skip=true'
          archiveArtifacts artifacts: 'target/*.jar'
        }
      }
      stage ('docker build') {
        steps{
          sh "docker build -t ajit4/spring-petclinic:${BUILD_NUMBER} ."
        }
      }
      stage ('docker push') { 
        steps{
          withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
              sh " docker login -u ajit4 -p ${dockerhub}"
          }
          sh "docker push ajit4/spring-petclinic:${BUILD_NUMBER}"
        }
      }
      /* stage ('deploy on same server') {
        steps {
          sh "docker run -d -p 8080:8080 --name=dockerhub:${BUILD_NUMBER} ajit4/spring-petclinic:${BUILD_NUMBER} "
        }
      } */
       stage ('deploy on server') { 
        steps {
          sshagent(['ec2-user']) {
             sh 'ssh -o StrictHostKeyChecking=no ec2-user@13.250.13.183 docker run -d -p 8080:8080 --name=dockerhub:${BUILD_NUMBER} ajit4/spring-petclinic:${BUILD_NUMBER}  '
          }
        }
      } 
      
    }
}
